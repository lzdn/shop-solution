<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.dao.admin.UserDao">
  <resultMap id="BaseResultMap" type="com.shop.dto.admin.UserDTO">
  	<id column="user_id" jdbcType="INTEGER" property="userId" />
  	<result column="dept_id" jdbcType="INTEGER" property="deptId" />
  	<result column="avatar" jdbcType="VARCHAR" property="avatar" />
  	<result column="account" jdbcType="VARCHAR" property="account" />
  	<result column="password" jdbcType="VARCHAR" property="password" />
  	<result column="salt" jdbcType="VARCHAR" property="salt" />
  	<result column="username" jdbcType="VARCHAR" property="username" />
  	<result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
  	<result column="sex" jdbcType="INTEGER" property="sex" />
  	<result column="email" jdbcType="VARCHAR" property="email" />
  	<result column="phone" jdbcType="VARCHAR" property="phone" />
  	<result column="status" jdbcType="INTEGER" property="status" />
  	<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  	<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  	<result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
  	<result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
  </resultMap>
  <sql id="Base_Column_List">
   user_id,dept_id,avatar,account,password,salt,username,birthday,sex,email,phone,status,create_time,update_time,login_time,last_login_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
   <where>  
  	and user_id = #{userId,jdbcType=INTEGER}
  </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Map">
    delete from t_user
    <where>  
  	and user_id = #{userId,jdbcType=INTEGER}
  </where>
  </delete>
  
  <insert id="insertSelective" parameterType="com.shop.dto.admin.UserDTO">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
	  <if test="userId != null">
        user_id,
      </if>
  	  <if test="deptId != null">
  		dept_id,
  	  </if>
  	  <if test="avatar != null">
  		avatar,
  	  </if>
  	  <if test="account != null">
  		account,
  	  </if>
  	  <if test="password != null">
  		password,
  	  </if>
  	  <if test="salt != null">
  		salt,
  	  </if>
  	  <if test="username != null">
  		username,
  	  </if>
  	  <if test="birthday != null">
  		birthday,
  	  </if>
  	  <if test="sex != null">
  		sex,
  	  </if>
  	  <if test="email != null">
  		email,
  	  </if>
  	  <if test="phone != null">
  		phone,
  	  </if>
  	  <if test="status != null">
  		status,
  	  </if>
  	  <if test="createTime != null">
  		create_time,
  	  </if>
  	  <if test="updateTime != null">
  		update_time,
  	  </if>
  	  <if test="loginTime != null">
  		login_time,
  	  </if>
  	  <if test="lastLoginTime != null">
  		last_login_time,
  	  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
	  <if test="userId != null">
		#{userId,jdbcType=INTEGER},
      </if>
	  <if test="deptId != null">
		#{deptId,jdbcType=INTEGER},
      </if>
	  <if test="avatar != null">
		#{avatar,jdbcType=VARCHAR},
      </if>
	  <if test="account != null">
		#{account,jdbcType=VARCHAR},
      </if>
	  <if test="password != null">
		#{password,jdbcType=VARCHAR},
      </if>
	  <if test="salt != null">
		#{salt,jdbcType=VARCHAR},
      </if>
	  <if test="username != null">
		#{username,jdbcType=VARCHAR},
      </if>
	  <if test="birthday != null">
		#{birthday,jdbcType=TIMESTAMP},
      </if>
	  <if test="sex != null">
		#{sex,jdbcType=INTEGER},
      </if>
	  <if test="email != null">
		#{email,jdbcType=VARCHAR},
      </if>
	  <if test="phone != null">
		#{phone,jdbcType=VARCHAR},
      </if>
	  <if test="status != null">
		#{status,jdbcType=INTEGER},
      </if>
	  <if test="createTime != null">
		#{createTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="updateTime != null">
		#{updateTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="loginTime != null">
		#{loginTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="lastLoginTime != null">
		#{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.dto.admin.UserDTO">
    update t_user
    <set>
	  <if test="deptId != null">
		dept_id = #{deptId,jdbcType=INTEGER},
      </if>
	  <if test="avatar != null">
		avatar = #{avatar,jdbcType=VARCHAR},
      </if>
	  <if test="account != null">
		account = #{account,jdbcType=VARCHAR},
      </if>
	  <if test="password != null">
		password = #{password,jdbcType=VARCHAR},
      </if>
	  <if test="salt != null">
		salt = #{salt,jdbcType=VARCHAR},
      </if>
	  <if test="username != null">
		username = #{username,jdbcType=VARCHAR},
      </if>
	  <if test="birthday != null">
		birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
	  <if test="sex != null">
		sex = #{sex,jdbcType=INTEGER},
      </if>
	  <if test="email != null">
		email = #{email,jdbcType=VARCHAR},
      </if>
	  <if test="phone != null">
		phone = #{phone,jdbcType=VARCHAR},
      </if>
	  <if test="status != null">
		status = #{status,jdbcType=INTEGER},
      </if>
	  <if test="createTime != null">
		create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="updateTime != null">
		update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="loginTime != null">
		login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="lastLoginTime != null">
		last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
   <where>  
  	and user_id = #{userId,jdbcType=INTEGER}
  </where>
  </update>
  
  <select id="findSplitPage" parameterType="Map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from t_user
    <where>  
	  <if test="deptId != null">
		and dept_id = #{deptId,jdbcType=INTEGER},
      </if>
	  <if test="avatar != null">
		and avatar = #{avatar,jdbcType=VARCHAR},
      </if>
	  <if test="account != null">
		and account = #{account,jdbcType=VARCHAR},
      </if>
	  <if test="password != null">
		and password = #{password,jdbcType=VARCHAR},
      </if>
	  <if test="salt != null">
		and salt = #{salt,jdbcType=VARCHAR},
      </if>
	  <if test="username != null">
		and username = #{username,jdbcType=VARCHAR},
      </if>
	  <if test="birthday != null">
		and birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
	  <if test="sex != null">
		and sex = #{sex,jdbcType=INTEGER},
      </if>
	  <if test="email != null">
		and email = #{email,jdbcType=VARCHAR},
      </if>
	  <if test="phone != null">
		and phone = #{phone,jdbcType=VARCHAR},
      </if>
	  <if test="status != null">
		and status = #{status,jdbcType=INTEGER},
      </if>
	  <if test="createTime != null">
		and create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="updateTime != null">
		and update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="loginTime != null">
		and login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="lastLoginTime != null">
		and last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
	  <if test="userId != null">
	  	and user_id = #{userId,jdbcType=INTEGER}
	  </if>
  </where>
  </select>
  
  <select id="findByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />  from t_user  where account = #{account,jdbcType=VARCHAR}
  </select>
  
   <resultMap id="UserRoleResult" type="com.shop.dto.admin.UserDTO" extends="BaseResultMap">
		<association property="role" javaType="com.shop.dto.admin.RoleDTO">
			<id column="role_id" jdbcType="INTEGER" property="roleId" />
		    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
		</association>
  </resultMap>
  
  <select id="selectUserRoleByPk" parameterType="Map" resultMap="UserRoleResult">
    	select 
    	t2.role_id, t2.role_name,
		t.user_id, t.dept_id, t.avatar, t.account, t.password, t.salt, t.username, t.birthday, t.sex, t.email, 
    	t.phone, t.status, t.create_time, t.login_time, t.last_login_time
		from t_user t 
		left join t_user_role_relation t1 on t1.user_id = t.user_id 
		left join t_role t2 on t2.role_id = t1.role_id 
    	where 1=1 and t.user_id = #{userId}
		ORDER BY t.user_id
  </select>
  
   <delete id="deleteUserRole" parameterType="Map">
	delete from t_user_role_relation where user_id = #{userId,jdbcType=INTEGER}
 </delete>
  
  <insert id="addUserRole" parameterType="Map">
    insert into t_user_role_relation (user_id, role_id) values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
  </insert>
  
</mapper>